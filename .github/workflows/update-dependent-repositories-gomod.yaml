---
name: Update dependent repositories
on:
  workflow_call:
    inputs:
      dependent_repositories:
        description: array of dependent repositories in json format
        type: string
        required: true
      base_repository:
        description: base repository which reference will be updated in dependent repositories
        type: string
        default: ""
    secrets:
      token:
        required: true
jobs:
  setup-base-repository:
    runs-on: ubuntu-latest
    outputs:
      base_repository: ${{ steps.setup.outputs.base_repository }}
    steps:
      - id: setup
        run: |
          base=${{ inputs.base_repository }}
          if [ -z "$base" ]
          then
            base=${{ github.repository }}
          fi
          echo "base_repository=$base" >> "$GITHUB_OUTPUT"

  update-dependent-repositories:
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        repository: ${{ fromJson(inputs.dependent_repositories) }}
    name: Update ${{ matrix.repository }}
    runs-on: ubuntu-latest
    needs: setup-base-repository
    steps:
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v4
        with:
          path: ${{ github.repository }}
          repository: ${{ github.repository }}
          token: ${{ secrets.token }}
      - name: Find merged PR
        uses: jwalton/gh-find-current-pr@v1.3.3
        id: findPr
        with:
          sha: ${{ github.sha }}
          github-token: ${{ secrets.token }}
      - name: Create commit message
        working-directory: ${{ github.repository }}
        run: |
          echo "Update go.mod and go.sum to latest version from ${{ github.repository }}@main" >> /tmp/commit-message
          echo "PR link: https://github.com/${{ github.repository }}/pull/${{ steps.findPr.outputs.pr }}" >> /tmp/commit-message
          echo "" >> /tmp/commit-message
          LOG_MSG=$(git log --date=iso --pretty='format:Commit: %h%nAuthor: %an%nDate: %ad%nMessage:%n  - %B%n' -1 | sed '/^$/d;$d')
          for((i=2;i<=18;i+=2)); do n=$(printf '%*s' $((i+2))) m=$(printf '%*s' $i) LOG_MSG=$(echo "$LOG_MSG" | tr '\n' '|' | sed "s/${m}-/${n}-/2g" | tr '|' '\n'); done
          echo "$LOG_MSG" >> /tmp/commit-message
          echo "Commit Message:"
          cat /tmp/commit-message
      - name: Checkout networkservicemesh/${{ matrix.repository }}
        uses: actions/checkout@v4
        with:
          path: networkservicemesh/${{ matrix.repository }}
          repository: networkservicemesh/${{ matrix.repository }}
          token: ${{ secrets.token }}
      - uses: actions/setup-go@v5
        with:
          go-version: 1.23.3
      - name: Update ${{ matrix.repository }} locally
        working-directory: networkservicemesh/${{ matrix.repository }}
        run: |
          GOPRIVATE=github.com/networkservicemesh go get -u github.com/${{ needs.setup-base-repository.outputs.base_repository }}@main
          go mod tidy
          git diff
      - name: Push update to the ${{ matrix.repository }}
        working-directory: networkservicemesh/${{ matrix.repository }}
        run: |
          echo Starting to update repositotry ${{ matrix.repository }}
          git config --global user.email "nsmbot@networkservicmesh.io"
          git config --global user.name "NSMBot"
          git add go.mod go.sum
          if ! [ -n "$(git diff --cached --exit-code)" ]; then
            echo ${{ matrix.repository }} is up to date
            exit 0;
          fi
          git commit -s -F /tmp/commit-message
          git checkout -b update/${{ github.repository }}
          git push -f origin update/${{ github.repository }}
